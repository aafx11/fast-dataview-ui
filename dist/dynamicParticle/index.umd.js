(function(u,h){typeof exports=="object"&&typeof module<"u"?h(exports,require("vue")):typeof define=="function"&&define.amd?define(["exports","vue"],h):(u=typeof globalThis<"u"?globalThis:u||self,h(u.index=u.index||{},u.Vue))})(this,function(u,h){"use strict";const P={width:{type:Number,default:400},height:{type:Number,default:400},radius:{type:Number,default:1.2},strength:{type:Number,default:2},src:{type:String}},D=1/30;class v{constructor(i,t,r,e,c,s,a){this.x=Math.random()*i>>0,this.y=Math.random()*t>>0,this.targetX=r,this.targetY=e,this.time=c,this.radius=s,this.colors=a,this.opacity=0}draw(i){i.fillStyle=`${this.colors}`,i.fillRect(this.x,this.y,this.radius*2,this.radius*2),i.fill()}update(i,t,r,e){if(this.distanceX=this.targetX-this.x,this.distanceY=this.targetY-this.y,this.velocityX=this.distanceX/this.time,this.velocityY=this.distanceY/this.time,r&&e){let c=r-this.x,s=e-this.y,a=Math.sqrt(c**2+s**2),n=i/a;n=n>7?7:n;let l=Math.atan2(s,c),o=Math.cos(l),d=Math.sin(l),g=o*n*-t,f=d*n*-t;this.velocityX+=g,this.velocityY+=f}this.x+=this.velocityX,this.y+=this.velocityY,this.opacity<1&&(this.opacity+=D)}change(i,t,r){this.targetX=i,this.targetY=t,this.colors=r}}const X=30;class I{constructor(i,t,r){this.radius=t,this.strength=r,this.canvasEle=i,this.ctx=i.getContext("2d"),this.width=i.width,this.height=i.height,this.particleArr=[],this.canvasEle.onmouseleave=()=>{this.mouseX=0,this.mouseY=0}}changeImg(i){if(this.particleArr.length){let t=i.particleData,r=t.length,e=this.particleArr,c=e.length;for(let a=0;a<r;a++){const{targetX:n,targetY:l,colors:o}=t[a];e[a]?e[a].change(n,l,o):e[a]=new v(this.width,this.height,n,l,X,this.radius,o)}r<c&&(this.particleArr=e.splice(0,r)),e=this.particleArr;let s=e.length;for(;s;){let a=~~(Math.random()*s--),n=e[a],{targetX:l,targetY:o,colors:d}=n;n.targetX=e[s].targetX,n.targetY=e[s].targetY,n.colors=e[s].colors,e[s].targetX=l,e[s].targetY=o,e[s].colors=d}}else this.particleArr=i.particleData.map(t=>new v(this.width,this.height,t.targetX,t.targetY,X,this.radius,t.colors))}drawCanvas(){this.ctx.clearRect(0,0,this.width,this.height),this.particleArr.forEach(i=>{i.update(30,this.strength,this.mouseX,this.mouseY),i.draw(this.ctx)}),this.requestID=window.requestAnimationFrame(()=>this.drawCanvas())}}const R=30;class Y{constructor(i,t,r,e){this.src=i,this.width=t,this.height=r,this.particleData=[],this.radius=e}createParticleData(i=this.src){return new Promise((t,r)=>{let e=new Image;e.crossOrigin="",e.src=decodeURI(new URL(i,typeof document>"u"&&typeof location>"u"?require("url").pathToFileURL(__filename).href:typeof document>"u"?location.href:document.currentScript&&document.currentScript.src||new URL("index.umd.js",document.baseURI).href).href),e.onload=()=>{const c=document.createElement("canvas"),s=c.getContext("2d"),a=this.width,n=this.height;c.width=a,c.height=n,s==null||s.drawImage(e,0,0,a,n);const l=s==null?void 0:s.getImageData(0,0,a,n).data;s==null||s.clearRect(0,0,this.width,this.height);for(let o=0;o<n;o+=5)for(let d=0;d<a;d+=5){const g=(d+o*a)*4,f=l[g+3];if(f==0)continue;const w=l[g],y=l[g+1],x=l[g+2];if(w+y+x+f){const M=new v(this.width,this.height,d,o,R,this.radius,`rgba(${w},${y},${x},${f})`);this.particleData.push(M)}}t(this.particleData)},e.onerror=()=>{r("图片转化成粒子失败")}})}}const A=["width","height"],p=h.defineComponent({__name:"index",props:P,setup(m,{expose:i}){const t=m;let r=h.inject("scaleX",h.ref(1)),e=h.inject("scaleY",h.ref(1));const c=h.ref(null),s=h.ref(null);let a=h.ref(),n=h.ref();const l=async d=>{n.value=new Y(d,t.width,t.height,t.radius),await n.value.createParticleData(),a.value.changeImg(n.value)},o=async()=>{n.value=new Y(t.src,t.width,t.height,t.radius),await n.value.createParticleData(),c.value&&(s.value=c.value.getContext("2d"),a.value=new I(c.value,t.radius,t.strength),c.value.addEventListener("mousemove",d=>{const{left:g,top:f}=c.value.getBoundingClientRect(),{clientX:w,clientY:y}=d;a.value.mouseX=(w-g)*(1/r.value),a.value.mouseY=(y-f)*(1/e.value)}),a.value.drawCanvas(),a.value.changeImg(n.value))};return h.onMounted(()=>{o()}),i({toggleImg:l}),(d,g)=>(h.openBlock(),h.createElementBlock("div",null,[h.createElementVNode("canvas",{ref_key:"canvasRef",ref:c,width:t.width,height:t.height},null,8,A)]))}});p.install=function(m){m.component("FDynamicParticle",p)};const C={title:"particle 粒子动效",name:"particle",category:"canvas动效",status:"20%",install(m){m.use(p)}};u.DynamicParticle=p,u.default=C,Object.defineProperties(u,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
